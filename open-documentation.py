# coding=utf-8

"""This script load the documentation page of the OF keyword passed as command line argument in your web browser.

Index
=====

This script use the index generated by generate-index.py to find the right html page.
If you haven't downloaded an index with this script, you have to run generate-index.py only once (see
generate-index.py documentation)

Usage
=====

Once you've got an index, just set the two paths below: indexPath and documentationURL.
The script use these paths to find the index and the OpenFrameworks documentation root page.
The script load the documentation page of an OpenFrameworks keyword within your browser, just invoque this
script with the keyword as argument.
If the script can't find the keyword in the index, it will load the home page of the documentation.

Requirement
===========

Python 2.7

"""

# Path to the index directory (downloaded with this script, or generated by generate-index.py)
indexPath = 'C:\Users\username\Documents\python\OF doc\index'
# Base URL of the OpenFrameworks documentation
documentationURL = 'http://www.openframeworks.cc/documentation/'


import sys
import os.path
import re
import webbrowser

classesIndexPath = os.path.join( indexPath, 'classesAndGlobalFunctions.txt' )

if len( sys.argv ) < 2 :
    print 'Error: This script must be call with an item name to search in the documentation as parameter.'
    sys.exit(1)

itemName = sys.argv[1]

if not os.path.isfile( classesIndexPath ):
    print 'Error: No index found.'
    sys.exit(1)
    
classesIndex = open( classesIndexPath, 'r' )
regex1 = re.compile( '(\w+)\s+(.+)' )
regex2 = re.compile( '(\S+)\s+(.+)' )
for entry in classesIndex:
    m1 = regex1.match( entry )
    if m1 is None:
        print 'Error: Malformed index file.'
    else:
        m2 = regex2.match( m1.group(2) )
        if m2 is None:
            if itemName == m1.group(1) or itemName + '_' == m1.group(1) :
                relPath = m1.group(2)
                print relPath
                webbrowser.open( documentationURL + relPath + '.html' )
                sys.exit(0)
        else:
            if itemName == m1.group(1) :
                relPath = m2.group(1)
                anchor = m2.group(2)
                print relPath, anchor
                webbrowser.open( documentationURL + relPath + '.html#' + anchor )
                sys.exit(0)
            
print 'Item not found in the documentation'
webbrowser.open( documentationURL )